<?xml version="1.0"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.3.0"
           xmlns:ext="http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.3.0"
           xsi:schemaLocation="
    http://www.osgi.org/xmlns/blueprint/v1.0.0 
    https://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
    http://camel.apache.org/schema/blueprint 
    http://camel.apache.org/schema/blueprint/camel-blueprint.xsd
    http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.3.0
    http://aries.apache.org/schemas/blueprint-ext/blueprint-ext-1.3.xsd">

  <cm:property-placeholder id="placeholder-cm" persistent-id="com.github.lburgazzoli.servicenow" update-strategy="reload">
    <cm:default-properties>
    </cm:default-properties>
  </cm:property-placeholder>

  <ext:property-placeholder id="placeholder-ext" evaluator="fabric8" placeholder-prefix="$[" placeholder-suffix="]"/>

  <!-- ********************************************************************* -->
  <!-- Beans                                                                 -->
  <!-- ********************************************************************* -->

  <bean id="bridge" class="com.github.lburgazzoli.camel.Bridge"/>
  <bean id="aggregateUserId" class="com.github.lburgazzoli.camel.AggregateUserId"/>
  <bean id="aggregateIncident" class="com.github.lburgazzoli.camel.AggregateIncident"/>

  <bean id="servicenow" class="org.apache.camel.component.servicenow.ServiceNowComponent">
    <property name="userName" value="$[k8s:secret:servicenow/servicenow.username]"/>
    <property name="password" value="$[k8s:secret:servicenow/servicenow.password]"/>
  </bean>

  <bean id="salesforceEndpointConfig" class="org.apache.camel.component.salesforce.SalesforceEndpointConfig">
    <property name="notifyForOperationCreate"   value="true"/>
    <property name="notifyForOperationDelete"   value="true"/>
    <property name="notifyForOperationUndelete" value="true"/>
    <property name="notifyForOperationUpdate"   value="true"/>
    <property name="notifyForFields"            value="ALL"/>
    <property name="apiVersion"                 value="38.0"/>
    <property name="defaultReplayId"            value="-2"/>
  </bean>

  <bean id="salesforceLoginConfig" class="org.apache.camel.component.salesforce.SalesforceLoginConfig">
    <property name="userName"     value="$[k8s:secret:servicenow/salesforce.username]"/>
    <property name="password"     value="$[k8s:secret:servicenow/salesforce.password]"/>
    <property name="clientId"     value="$[k8s:secret:servicenow/salesforce.clientid]"/>
    <property name="clientSecret" value="$[k8s:secret:servicenow/salesforce.clientsecret]"/>
  </bean>

  <bean id="salesforce" class="org.apache.camel.component.salesforce.SalesforceComponent">
    <property name="loginConfig" ref="salesforceLoginConfig"/>
    <property name="config"      ref="salesforceEndpointConfig"/>
    <property name="packages"    value="com.github.lburgazzoli.camel.salesforce.model"/>
  </bean>

  <bean id="cacheContainer" class="com.github.lburgazzoli.camel.infinispan.InfinispanCacheContainerFactory" factory-method="createContainer" destroy-method="stop">
    <argument>
      <map>
        <entry key="infinispan.client.hotrod.server_list" value="${infinispan.server.list}"/>
        <entry key="infinispan.client.hotrod.force_return_values" value="true"/>
      </map>
    </argument>
  </bean>

  <bean id="idempotent" class="org.apache.camel.component.infinispan.processor.idempotent.InfinispanIdempotentRepository">
    <argument ref="cacheContainer"/>
    <argument value="${infinispan.idempotent.cache}"/>
  </bean>

  <!-- ********************************************************************* -->
  <!-- Camel                                                                 -->
  <!-- ********************************************************************* -->

  <camelContext id="camel-context" xmlns="http://camel.apache.org/schema/blueprint">

    <route>
      <from uri="salesforce:camel-test?updateTopic=true&amp;sObjectQuery=SELECT Id, CaseNumber, InternalID__c FROM Case"/>
      <to uri="log:com.github.lburgazzoli.salesforce-stream?level=DEBUG&amp;showHeaders=true&amp;multiline=false"/>
      <idempotentConsumer messageIdRepositoryRef="idempotent" skipDuplicate="false">
        <header>CamelSalesforceReplayId</header>
        <filter>
          <exchangeProperty>CamelDuplicateMessage</exchangeProperty>
          <log message="SALESFORCE: Skip Event ${header[CamelSalesforceReplayId]}" loggingLevel="INFO"/>
          <stop/>
        </filter>
        <log message="SALESFORCE: Process Event ${header[CamelSalesforceReplayId]}" loggingLevel="INFO"/>
        <to uri="direct:salesforce-stream-processing"/>
      </idempotentConsumer>
    </route>

    <route>
      <from uri="direct:salesforce-stream-processing"/>
      <setHeader headerName="SalesForceId">
        <simple>${body[Id]}</simple>
      </setHeader>
      <setHeader headerName="SalesForceCaseNumber">
        <simple>${body[CaseNumber]}</simple>
      </setHeader>
      <setHeader headerName="SalesForceInternalId">
        <simple>${body[InternalID__c]}</simple>
      </setHeader>
      <setBody>
        <simple>${body[Id]}</simple>
      </setBody>
      <setHeader headerName="sObjectName">
        <constant>Case</constant>
      </setHeader>
      <enrich>
        <constant>salesforce:getSObject</constant>
      </enrich>

      <to uri="direct:salesforce-to-servicenow"/>
    </route>

    <route>
      <from uri="direct:salesforce-update"/>
        <to uri="log:com.github.lburgazzoli.salesforce-update-action?level=DEBUG&amp;showHeaders=true&amp;multiline=false"/>
        <to uri="salesforce:updateSObject"/>
        <to uri="log:com.github.lburgazzoli.salesforce-update-result?level=DEBUG&amp;showHeaders=true&amp;multiline=false"/>
    </route>

    <route>
      <from uri="direct:servicenow"/>
        <to uri="log:com.github.lburgazzoli.servicenow-action?level=DEBUG&amp;showHeaders=true&amp;multiline=false"/>
        <to uri="servicenow:{{servicenow.instance.name}}?excludeReferenceLink=true"/>
        <to uri="log:com.github.lburgazzoli.servicenow-result?level=DEBUG&amp;showHeaders=true&amp;multiline=false"/>
    </route>

    <route>
      <from uri="direct:salesforce-to-servicenow"/>

      <enrich strategyRef="aggregateUserId">
        <constant>direct:servicenow-search-user</constant>
      </enrich>
      <enrich strategyRef="aggregateIncident">
        <constant>direct:servicenow-search-incident</constant>
      </enrich>

      <bean ref="bridge" method="caseToIncidentRequest"/>

      <choice>
        <when>
          <simple>${header[ServiceNowUpdate]} == true</simple>

          <setHeader headerName="CamelServiceNowResource">
            <constant>import</constant>
          </setHeader>
          <setHeader headerName="CamelServiceNowTable">
            <constant>u_imp_incident</constant>
          </setHeader>
          <setHeader headerName="CamelServiceNowRequestModel">
            <constant>com.github.lburgazzoli.camel.servicenow.model.ServiceNowIncidentRequest</constant>
          </setHeader>
          <setHeader headerName="CamelServiceNowResponseModel">
            <constant>com.github.lburgazzoli.camel.servicenow.model.ServiceNowImportSetResponse</constant>
          </setHeader>
          <setHeader headerName="CamelServiceNowAction">
            <constant>create</constant>
          </setHeader>

          <log message="SERVICENOW: Process Case ${body.externalId}" loggingLevel="INFO"/>
          <to uri="direct:servicenow"/>

          <setBody>
            <simple>${body[0]}</simple>
          </setBody>
          <choice>
            <when>
              <simple>${body.status} != 'error' &amp;&amp; ${header[SalesForceInternalId]} == null</simple>
              <bean ref="bridge" method="incidentImportToCaseId"/>
              <log message="SALESFORCE: Update ${header[SalesForceCaseNumber]} / ${body.internalID__c}" loggingLevel="INFO"/>
              <to uri="direct:salesforce-update"/>
            </when>
          </choice>

        </when>
      </choice>
    </route>

    <route>
      <from uri="direct:servicenow-search-user"/>
      <setHeader headerName="CamelServiceNowResource">
        <constant>table</constant>
      </setHeader>
      <setHeader headerName="CamelServiceNowAction">
        <constant>retrieve</constant>
      </setHeader>
      <setHeader headerName="CamelServiceNowTable">
        <constant>sys_user</constant>
      </setHeader>
      <setHeader headerName="CamelServiceNowQuery">
        <simple>email=${body.contactEmail}</simple>
      </setHeader>
      <setHeader headerName="CamelServiceNowModel">
        <constant>com.github.lburgazzoli.camel.servicenow.model.ServiceNowUser</constant>
      </setHeader>
      <to uri="direct:servicenow"/>
    </route>

    <route>
      <from uri="direct:servicenow-search-incident"/>
      <setHeader headerName="CamelServiceNowResource">
        <constant>table</constant>
      </setHeader>
      <setHeader headerName="CamelServiceNowAction">
        <constant>retrieve</constant>
      </setHeader>
      <setHeader headerName="CamelServiceNowTable">
        <constant>incident</constant>
      </setHeader>
      <setHeader headerName="CamelServiceNowQuery">
        <simple>u_external_id=SF-${body.id}-${body.caseNumber}</simple>
      </setHeader>
      <setHeader headerName="CamelServiceNowModel">
        <constant>com.github.lburgazzoli.camel.servicenow.model.ServiceNowIncident</constant>
      </setHeader>
      <to uri="direct:servicenow"/>
    </route>

  </camelContext>

</blueprint>
